name: CI

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]

jobs:
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      ## Yarn dir
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      ## Cache
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn2-

      ## Cache
      - name: Cache node_modules
        id: cache-node-modules2
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules2-

      ## Cache
      - name: Cache Cypress
        id: cache-cypress2
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/Cypress
          key: ${{ runner.os }}-${{ matrix.node-version }}-cypress2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-cypress2-

      ## Dependencies
      - name: Install Dependencies
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      ## Test
      - name: Run tests
        run: yarn test:e2e --headless

      - name: Upload artifacts on fail
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: videos
          path: tests/e2e/videos/

      - name: Set code coverage commit status ðŸ“«
        # https://help.github.com/en/actions/reference/events-that-trigger-workflows#pull-request-event-pull_request
        if: github.event_name == 'pull_request' && github.base_ref == 'trunk'
        run: npx set-gh-status
        env:
          # show debug logs from "set-gh-status" script
          DEBUG: check-code-coverage
          # set the SHA of the _merged_ commit so the status check goes to PR
          GH_SHA: ${{ github.event.after }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # if running on master branch, update the README code coverage badge
      - name: Update code coverage badge ðŸ¥‡
        # https://help.github.com/en/actions/reference/events-that-trigger-workflows#push-event-push
        if: github.event_name == 'push' && github.ref == 'refs/heads/trunk'
        run: npx update-badge

      # commit any changed files (like README with updated badge)
      # if running on master branch
      # https://github.com/mikeal/publish-to-github-action
      - uses: mikeal/publish-to-github-action@master
        if: github.event_name == 'push' && github.ref == 'refs/heads/trunk'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: 'trunk'
